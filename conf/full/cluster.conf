
# config the auth config filename
auth_config_filename = ../auth/auth.conf

# the buffer size for RDMA network communication
# this parameter only for RDMA network
# the min value is 8KB and the max value is 8MB
# default value is 256K
buffer_size = 256K

# if use thread local for connections, value list:
## auto: set to yes when server count <= 64, otherwise no
## yes: enable thread local for connections
## no: disable thread local for connections
# this parameter is valid only when communication set to rdma
# default value is auto
connection_thread_local = auto

# the communication value list:
##  socket: TCP over ethernet or RDMA network
##  rdma: RDMA network only
# default value is socket
communication = socket

# smart polling mode for RDMA network
# auto detect to poll by Linux epoll or RDMA busy polling
# default value is true
smart_polling = true

# switch the polling approach between Linux epoll and RDMA busy polling
# switch to RDMA busy polling when IOPS >= this parameter,
# otherwise switch to Linux epoll
# default value is 10240
polling_switch_on_iops = 10240

# switch to another polling approach when the IOPS meets
# the condition on continuous count / times
# default value is 3
polling_switch_on_count = 3


[master-election]
# the quorum for master election
# set quorum to majority to avoid brain-split
# value list:
##  any: no requirement
##  majority: more than half
##  auto: set to majority when the number of nodes is odd,
##        otherwise set to any
# default value is auto
quorum = auto

# the timeout to determinate master lost
# the default value is 3 seconds
master_lost_timeout = 3

# the max wait time for master election
# this parameter is for the master restart
# the default value is 30 seconds
max_wait_time = 30

# the server can't be elected as master when it's shutdown
# duration > this parameter unless all servers are online
# the correct value is in [60, 86400]
# the default value is 300 seconds
max_shutdown_duration = 300

# if enable vote node when the number of servers is even
# the default value is false
vote_node_enabled = false

# the cluster config filename of the vote node
# this parameter is valid when vote_node_enabled is true
vote_node_cluster_filename = ../vote/cluster.conf


[data-replication]
# the quorum for data replication
# set quorum to majority for strict data consistency and high data security
# value list:
##  any: no requirement
##  majority: more than half
##  smart: set to majority when more than half nodes are active,
##        otherwise set to any, smart mode is mainly for two replicas
##  auto: set to majority when the number of nodes is odd,
##        otherwise set to smart
# default value is auto
quorum = auto

# deactive the slave node when connect fail times exceeds this parameter
# this parameter is valid when quorum is smart or
# quorum is auto and the number of nodes is even
# default value is 3
deactive_on_failures = 3


[group-cluster]
# the default cluster port
port = 11011

# the communication value list:
##  socket: TCP over ethernet or RDMA network
##  rdma: RDMA network only
# default value by the global config with same name
communication = socket

# smart polling mode for RDMA network
# auto detect to poll by Linux epoll or RDMA busy polling
# default value by the global config with same name
smart_polling = true

# switch the polling approach between Linux epoll and RDMA busy polling
# switch to RDMA busy polling when IOPS >= this parameter,
# otherwise switch to Linux epoll
# default value by the global config with same name
polling_switch_on_iops = 10240

# switch to another polling approach when the IOPS meets
# the condition on continuous count / times
# default value by the global config with same name
polling_switch_on_count = 3


[group-service]
# the default service port
port = 11012

## other config items please see section: [group-cluster]
## such as: communication, smart_polling etc.


# config a server instance
# the section format: [server-$sid]
# $sid as the server id is a 32 bits natural number (1, 2, 3 etc.), can be discrete
[server-1]

# format: host[:port
# host can be an IP address or a hostname, IPv6 is supported
# IP address is recommended
# can occur more than once
host = 172.16.168.128

# [server-2]
# cluster-port = 11013
# service-port = 11014
# host = 172.16.168.128

# [server-3]
# cluster-port = 11015
# service-port = 11016
# host = 172.16.168.128
